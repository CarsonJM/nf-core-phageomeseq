/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/phageomeseq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    /*
    -----------------------------------------
    Input options
    -----------------------------------------
    */
    input                      = null
    // Input data type options:
    // 1. 'raw_reads'
    // 2. 'preprocessed_reads'
    // 3. 'contigs'
    // 4. 'phage_like_sequences'
    // 5. 'filtered_phage_sequences'
    // 6. 'dereplicated_phage_sequences'
    input_data_type = 'raw_reads'

    /*
    -----------------------------------------
    Module 1: Read preprocessing
    -----------------------------------------
    */
    // raw_reads start here
    // KneadData database options
    download_kneaddata_db = true
    kneaddata_db_type = 'human_genome'
    // KneadData options
    run_kneaddata = true
    trimmomatic_path = '/usr/local/share/trimmomatic-0.39-2'

    /*
    -----------------------------------------
    Module 2: Phage enrichment
    -----------------------------------------
    */
    // ViromeQC database options
    download_kneaddata_db = true
    // ViromeQC options

    /*
    -----------------------------------------
    Module 3: Read assembly
    -----------------------------------------
    */
    // * preprocessed_reads start here
    // SPAdes options
    add_metaviralspades = true
    add_rnaviralspades = false
    // contig length filter
    min_contig_length = 1000
    // QUAST options
    run_quast = true

    /*
    -----------------------------------------
    Module 4: Phage identification
    -----------------------------------------
    */
    // * contigs start here
    // geNomad options
    run_genomad_calibration = true
    genomad_min_score = 0.7
    genomad_max_fdr = 0.05
    // MASH screen options
    run_mash_screen = true
    mash_phage_database = ''
    // possibly add more phage identification tools

    /*
    -----------------------------------------
    Module 5: Phage quality
    -----------------------------------------
    */
    // * phage_like_sequences start here
    // CheckV options
    checkv_min_completeness = 50
    checkv_max_bacterial_genes = 3
    checkv_min_viral_genes = 0
    checkv_remove_proviruses = false

    /*
    -----------------------------------------
    Module 6: Phage dereplication
    -----------------------------------------
    */
    // filtered_phage_sequences start here
    // BLAST options
    derep_blast_min_id = 90
    derep_blast_max_evalue = 0.001
    // ANI calc & cluster options
    derep_min_ani = 0.99
    derep_min_cov = 1.00
    derep_leiden_resolution = 1.0
    derep_random_seed: 1953


    /*
    -----------------------------------------
    Module 7: Phage clustering
    -----------------------------------------
    */
    // dereplicated_phage_sequences start here
    // BLAST options
    votu_blast_min_id = 90
    votu_blast_max_evalue = 0.001
    // ANI calc & cluster options
    votu_min_ani = 0.95
    votu_min_cov = 0.85
    votu_leiden_resolution = 1.0
    votu_random_seed: 1953
    // vCONTact2 options
    run_vcontact2 = false
    vcontact2_phage_database = ''

    /*
    -----------------------------------------
    Module 8: Host prediction
    -----------------------------------------
    */
    // iPHoP options
    run_iphop = true
    iphop_split_num_seqs = 100
    iphop_min_score= 90
    iphop_custom_database = ''

    /*
    -----------------------------------------
    Module 9: Taxonomy assignment
    -----------------------------------------
    */
    // geNomad options
    run_genomad_taxa = true
    genomad_taxa_min_genes = 1
    genomad_taxa_min_agreement= 0.5
    // possibly add protein consensus in the future

        /*
    -----------------------------------------
    Module 10: Functional annotation
    -----------------------------------------
    */
    // DRAM-v options
    run_dramv = true
    // possibly add custom database option in the future

    /*
    -----------------------------------------
    Module 11: Lifestyle prediction
    -----------------------------------------
    */
    // BACPHLIP options
    run_bacphlip = true
    bacphlip_min_completeness = 90
    bacphlip_min_confidence = 0.9
    // possibly add integrase search in the future

    /*
    -----------------------------------------
    Module 12: Phage abundance
    -----------------------------------------
    */
    // bowtie2 options
    // inStrain options
    instrain_min_read_id = 0.95
    instrain_min_breadth = 0.5
    instrain_use_expected_breadth = true
    instrain_min_depth = 5
    
    /*
    -----------------------------------------
    Module 13: Prophage activity
    -----------------------------------------
    */
    // propagAte options
    propagate_min_id: 0.99
    propagate_min_breadth: 0.99
    propagate_min_depth: 5


    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'


    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/phageomeseq custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/phageomeseq.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/phageomeseq profiles: ${params.custom_config_base}/pipeline/phageomeseq.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}


// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/phageomeseq'
    author          = """CarsonJM"""
    homePage        = 'https://github.com/nf-core/phageomeseq'
    description     = """assembly, identification, and characterization of phage genomes from metagenomic sequences"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
